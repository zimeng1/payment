# \u89E3\u51B3springboot\u548Cswagger3.0\u517C\u5BB9\u95EE\u9898 https://stackoverflow.com/questions/40241843/failed-to-start-bean-documentationpluginsbootstrapper-in-spring-data-rest
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# \u4E0D\u4F7F\u7528httpclient\uFF0C\u6539\u7528okhttp
feign.httpclient.enabled=false
feign.okhttp.enabled=true
# \u662F\u5426\u7981\u7528\u91CD\u5B9A\u5411
feign.okhttp.follow-redirects=true
feign.okhttp.connect-timeout=5000
# \u94FE\u63A5\u5931\u8D25\u662F\u5426\u91CD\u8BD5
feign.okhttp.retry-on-connection-failure=true
feign.okhttp.read-timeout=5000
feign.okhttp.write-timeout=5000
# \u6700\u5927\u7A7A\u95F2\u6570\u91CF
feign.okhttp.max-idle-connections=5
# \u751F\u5B58\u65F6\u95F4
feign.okhttp.keep-alive-duration=15000
# \u5F00\u542F\u538B\u7F29\u529F\u80FD
feign.compression.request.enabled=true
feign.compression.response.enabled=true
#\u8BBE\u7F6E\u5168\u5C40(default)\u8D85\u65F6\u65F6\u95F4 \u8FD8\u53EF\u4EE5\u7ED9\u6307\u5B9A\u7684FeignClient\u6307\u5B9A\u5BF9\u5E94\u7684\u8D85\u65F6\u65F6\u95F4\uFF0C\u56E0\u4E3A\u5E76\u4E0D\u662F\u6240\u6709\u7684\u670D\u52A1\u8D85\u65F6\u65F6\u95F4\u90FD\u662F\u7EDF\u4E00\u7684\uFF0C\u6709\u4E9B\u7279\u6B8A\u7684\u4E1A\u52A1\u573A\u666F\u9700\u8981\u9488\u5BF9\u6027\u5730\u8BBE\u7F6E\u8D85\u65F6\u65F6\u95F4
feign.client.config.default.connect-timeout=30000
feign.client.config.default.read-timeout=30000

# \u5F00\u542F\u7F13\u5B58\uFF0C\u5982\u679C\u6CE8\u518C\u4E2D\u5FC3\u6709\u81EA\u5DF1\u7684\u7F13\u5B58\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u7981\u7528loadbalancer\u7684\u7F13\u5B58
spring.cloud.loadbalancer.cache.enabled=true
# \u8FC7\u671F\u65F6\u95F410s
spring.cloud.loadbalancer.cache.ttl=10
# \u5BB9\u91CF256M
spring.cloud.loadbalancer.cache.capacity=256
#          initialCapacity=[integer]: sets Caffeine.initialCapacity.
#          maximumSize=[long]: sets Caffeine.maximumSize.
#          maximumWeight=[long]: sets Caffeine.maximumWeight.
#          expireAfterAccess=[duration]: sets Caffeine.expireAfterAccess(long, java.util.concurrent.TimeUnit).
#          expireAfterWrite=[duration]: sets Caffeine.expireAfterWrite(long, java.util.concurrent.TimeUnit).
#          refreshAfterWrite=[duration]: sets Caffeine.refreshAfterWrite(long, java.util.concurrent.TimeUnit).
#          weakKeys: sets Caffeine.weakKeys().
#          weakValues: sets Caffeine.weakValues().
#          softValues: sets Caffeine.softValues().
#          recordStats: sets Caffeine.recordStats().
#         initialCapacity\u521D\u59CB\u5316\u952E\u503C\u5BF9\u7684\u6570\u91CF
spring.cloud.loadbalancer.cache.caffeine.spec=initialCapacity=500,expireAfterWrite=5s

## fireBlocks\u7684\u76F8\u5173\u914D\u7F6E\u53C2\u6570 Editor\u89D2\u8272\u7684key,  Editor\u89D2\u8272\uFF1A\u53EF\u4EE5\u53D1\u8D77\u4EA4\u6613\u5E76\u63D0\u4EA4\u767D\u540D\u5355\u8BF7\u6C42\u3002\u5982\u679C\u6CA1\u6709\u914D\u73AF\u5883\u53D8\u91CF,\u5C31\u8D70\u8FD9\u91CC
app.fire.blocks.apiKey=696ad22d-7d34-421e-b084-9e501bdd6187
## fireBlocks\u7684\u76F8\u5173\u914D\u7F6E\u53C2\u6570 api\u8C03\u5EA6\u7684url
app.fire.blocks.baseUrl=https://api.fireblocks.io/v1
app.fire.blocks=test