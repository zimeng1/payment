<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mc.payment.core.service.mapper.ChannelWalletMapper">

    <resultMap id="BaseResultMap" type="com.mc.payment.core.service.entity.ChannelWalletEntity">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="assetType" column="asset_type" jdbcType="TINYINT"/>
        <result property="channelSubType" column="channel_sub_type" jdbcType="TINYINT"/>
        <result property="assetName" column="asset_name" jdbcType="VARCHAR"/>
        <result property="netProtocol" column="net_protocol" jdbcType="VARCHAR"/>
        <result property="walletAddress" column="wallet_address" jdbcType="VARCHAR"/>
        <result property="balance" column="balance" jdbcType="DECIMAL"/>
        <result property="freezeAmount" column="freeze_amount" jdbcType="DECIMAL"/>
        <result property="apiCredential" column="api_credential" jdbcType="OTHER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="statusMsg" column="status_msg" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,asset_type,channel_sub_type,
        asset_name,net_protocol,wallet_address,
        balance,freeze_amount,api_credential,
        remark,status,status_msg,
        create_by,create_time,update_by,
        update_time
    </sql>

    <sql id="walletQueryCondition">
        <if test="req.id != null and req.id != ''">
            and id = #{req.id}
        </if>
        <if test="req.assetName != null and req.assetName != ''">
            and asset_name = #{req.assetName}
        </if>
        <if test="req.netProtocol != null and req.netProtocol != ''">
            and net_protocol = #{req.netProtocol}
        </if>
        <if test="req.walletAddress != null and req.walletAddress != ''">
            and wallet_address = #{req.walletAddress}
        </if>
        <if test="req.status != null">
            and status = #{req.status}
        </if>
        <if test="req.channelSubTypeList != null and req.channelSubTypeList.size() > 0">
            AND channel_sub_type IN
            <foreach collection="req.channelSubTypeList" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="req.hideEmptyWalletList != null and req.hideEmptyWalletList.size() > 0">
            <foreach collection="req.hideEmptyWalletList" item="item" index="index">
                <if test="item == 0">
                    and freeze_amount >0
                </if>
                <if test="item == 1">
                    and (balance - freeze_amount) >0
                </if>
                <if test="item == 2">
                    and balance >0
                </if>
            </foreach>
        </if>
    </sql>

    <select id="page" resultType="com.mc.payment.core.service.entity.ChannelWalletEntity">
        select * from mcp_channel_wallet
        <where>
            <include refid="walletQueryCondition"></include>
        </where>
        <choose>
            <when test="req.sortByAmount == 0 and req.sortOrder != null">
                order by freeze_amount ${req.sortOrder}
            </when>
            <when test="req.sortByAmount == 1 and req.sortOrder != null">
                order by (balance - freeze_amount) ${req.sortOrder}
            </when>
            <when test="req.sortByAmount == 2 and req.sortOrder != null">
                order by balance ${req.sortOrder}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
    </select>


    <select id="queryFireBlocksWalletSyncInfo"
            resultType="com.mc.payment.core.service.model.dto.FireBlocksWalletSyncInfoDto">
        SELECT t1.id wallet_id,
               t1.channel_wallet_id,
               t2.external_id,
               t3.channel_asset_name
        FROM mcp_merchant_wallet t1
                 LEFT JOIN mcp_account t2 ON t1.account_id = t2.id
                 LEFT JOIN mcp_channel_asset_config t3 ON t1.asset_name = t3.asset_name
            AND t1.net_protocol = t3.net_protocol
        WHERE t1.`status` IN (3, 4, 5)
          AND t2.external_id is not null
          AND t3.channel_asset_name is not null
          AND t1.account_id = #{accountId}
    </select>
    <select id="queryExportInfo" resultType="com.mc.payment.core.service.model.rsp.ChannelWalletExportRsp">
        select
        id,
        channel_sub_type,
        asset_name,
        net_protocol,
        wallet_address,
        freeze_amount,
        balance - freeze_amount as availableAmount,
        balance,
        status,
        IFNULL(update_time,create_time) as operateTime,
        IFNULL(update_by,create_by) as operateBy
        from
        mcp_channel_wallet
        <where>
            <include refid="walletQueryCondition"></include>
        </where>
        order by
        create_time
        desc
    </select>
</mapper>
